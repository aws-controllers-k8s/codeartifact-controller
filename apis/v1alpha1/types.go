// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	ackv1alpha1 "github.com/aws-controllers-k8s/runtime/apis/core/v1alpha1"
	"github.com/aws/aws-sdk-go/aws"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// Hack to avoid import errors during build...
var (
	_ = &metav1.Time{}
	_ = &aws.JSONValue{}
	_ = ackv1alpha1.AWSAccountID("")
)

// Contains details about a package version asset.
type AssetSummary struct {
	Size *int64 `json:"size,omitempty"`
}

// Information about a domain. A domain is a container for repositories. When
// you create a domain, it is empty until you add one or more repositories.
type DomainDescription struct {
	ARN             *string      `json:"arn,omitempty"`
	AssetSizeBytes  *int64       `json:"assetSizeBytes,omitempty"`
	CreatedTime     *metav1.Time `json:"createdTime,omitempty"`
	EncryptionKey   *string      `json:"encryptionKey,omitempty"`
	Name            *string      `json:"name,omitempty"`
	Owner           *string      `json:"owner,omitempty"`
	RepositoryCount *int64       `json:"repositoryCount,omitempty"`
	S3BucketARN     *string      `json:"s3BucketARN,omitempty"`
	Status          *string      `json:"status,omitempty"`
}

// Information about a domain, including its name, Amazon Resource Name (ARN),
// and status. The ListDomains (https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_ListDomains.html)
// operation returns a list of DomainSummary objects.
type DomainSummary struct {
	ARN           *string      `json:"arn,omitempty"`
	CreatedTime   *metav1.Time `json:"createdTime,omitempty"`
	EncryptionKey *string      `json:"encryptionKey,omitempty"`
	Name          *string      `json:"name,omitempty"`
	Owner         *string      `json:"owner,omitempty"`
	Status        *string      `json:"status,omitempty"`
}

// Details of the license data.
type LicenseInfo struct {
	Name *string `json:"name,omitempty"`
	URL  *string `json:"url,omitempty"`
}

// Details about a package dependency.
type PackageDependency struct {
	DependencyType     *string `json:"dependencyType,omitempty"`
	VersionRequirement *string `json:"versionRequirement,omitempty"`
}

// The description of the package group.
type PackageGroupDescription struct {
	ARN         *string      `json:"arn,omitempty"`
	ContactInfo *string      `json:"contactInfo,omitempty"`
	CreatedTime *metav1.Time `json:"createdTime,omitempty"`
	Description *string      `json:"description,omitempty"`
	DomainName  *string      `json:"domainName,omitempty"`
	DomainOwner *string      `json:"domainOwner,omitempty"`
	// The package group origin configuration that determines how package versions
	// can enter repositories.
	OriginConfiguration *PackageGroupOriginConfiguration `json:"originConfiguration,omitempty"`
	// Information about the identifiers of a package group.
	Parent  *PackageGroupReference `json:"parent,omitempty"`
	Pattern *string                `json:"pattern,omitempty"`
}

// The package group origin configuration that determines how package versions
// can enter repositories.
type PackageGroupOriginConfiguration struct {
	Restrictions map[string]*PackageGroupOriginRestriction `json:"restrictions,omitempty"`
}

// Contains information about the configured restrictions of the origin controls
// of a package group.
type PackageGroupOriginRestriction struct {
	EffectiveMode *string `json:"effectiveMode,omitempty"`
	// Information about the identifiers of a package group.
	InheritedFrom     *PackageGroupReference `json:"inheritedFrom,omitempty"`
	Mode              *string                `json:"mode,omitempty"`
	RepositoriesCount *int64                 `json:"repositoriesCount,omitempty"`
}

// Information about the identifiers of a package group.
type PackageGroupReference struct {
	ARN     *string `json:"arn,omitempty"`
	Pattern *string `json:"pattern,omitempty"`
}

// Details about a package group.
type PackageGroupSummary struct {
	ARN         *string      `json:"arn,omitempty"`
	ContactInfo *string      `json:"contactInfo,omitempty"`
	CreatedTime *metav1.Time `json:"createdTime,omitempty"`
	Description *string      `json:"description,omitempty"`
	DomainName  *string      `json:"domainName,omitempty"`
	DomainOwner *string      `json:"domainOwner,omitempty"`
	// The package group origin configuration that determines how package versions
	// can enter repositories.
	OriginConfiguration *PackageGroupOriginConfiguration `json:"originConfiguration,omitempty"`
	// Information about the identifiers of a package group.
	Parent  *PackageGroupReference `json:"parent,omitempty"`
	Pattern *string                `json:"pattern,omitempty"`
}

// Details about a package version.
type PackageVersionDescription struct {
	HomePage             *string      `json:"homePage,omitempty"`
	PublishedTime        *metav1.Time `json:"publishedTime,omitempty"`
	SourceCodeRepository *string      `json:"sourceCodeRepository,omitempty"`
	Summary              *string      `json:"summary,omitempty"`
}

// The details of a repository stored in CodeArtifact. A CodeArtifact repository
// contains a set of package versions, each of which maps to a set of assets.
// Repositories are polyglotâ€”a single repository can contain packages of any
// supported type. Each repository exposes endpoints for fetching and publishing
// packages using tools like the npm CLI, the Maven CLI (mvn), and pip. You
// can create up to 100 repositories per Amazon Web Services account.
type RepositoryDescription struct {
	AdministratorAccount *string      `json:"administratorAccount,omitempty"`
	ARN                  *string      `json:"arn,omitempty"`
	CreatedTime          *metav1.Time `json:"createdTime,omitempty"`
	Description          *string      `json:"description,omitempty"`
	DomainName           *string      `json:"domainName,omitempty"`
	DomainOwner          *string      `json:"domainOwner,omitempty"`
}

// Details about a repository, including its Amazon Resource Name (ARN), description,
// and domain information. The ListRepositories (https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_ListRepositories.html)
// operation returns a list of RepositorySummary objects.
type RepositorySummary struct {
	AdministratorAccount *string      `json:"administratorAccount,omitempty"`
	ARN                  *string      `json:"arn,omitempty"`
	CreatedTime          *metav1.Time `json:"createdTime,omitempty"`
	Description          *string      `json:"description,omitempty"`
	DomainName           *string      `json:"domainName,omitempty"`
	DomainOwner          *string      `json:"domainOwner,omitempty"`
}

// An CodeArtifact resource policy that contains a resource ARN, document details,
// and a revision.
type ResourcePolicy struct {
	ResourceARN *string `json:"resourceARN,omitempty"`
}

// Contains the revision and status of a package version.
type SuccessfulPackageVersionInfo struct {
	Revision *string `json:"revision,omitempty"`
}

// A tag is a key-value pair that can be used to manage, search for, or filter
// resources in CodeArtifact.
type Tag struct {
	Key   *string `json:"key,omitempty"`
	Value *string `json:"value,omitempty"`
}
